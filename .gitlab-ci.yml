# https://hub.docker.com/r/library/postgres/tags/
services:
  - postgres:9.6.2-alpine

# https://hub.docker.com/r/library/node/tags/
image: node:6.11

variables:
  # Configure postgres service (https://hub.docker.com/_/postgres/)
  POSTGRES_DB: gmnst_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  # DATABASE_URL: "postgres://postgres@postgres/gmnst_test"
  DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"

# stages:
#   - test

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
  - node_modules/

connect:
  # image: postgres:9.6.2-alpine
  # image: node:6.11
  # services:
  #   - postgres:9.6.2-alpine
  image: postgres:9.6.2-alpine
  # services:
  # - node:6.11
  script:
  # official way to provide password to psql: http://www.postgresql.org/docs/9.3/static/libpq-envars.html
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
  - npm install --quiet
  - npm run knex:migrate

# test_server:
#   stage: test
#   image: node:6.11
#   services:
#     - postgres:9.6.2-alpine
#   # variables:
#   #   DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB"
#   script:
#     # - export PGPASSWORD=$POSTGRES_PASSWORD
#     # - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
#     - npm install --quiet
#     - npm run knex:migrate
#     - npm run knex:seed
#     - npm run test:server

# test_db:
#   stage: test
#   services:
#     - postgres:9.5.0
#   script:
#    - npm install
#    - node ./specs/start.js ./specs/db-postgres.spec.js
#   tags:
#     - docker
